node{
    
def mavenHome = tool name: "maven3.9.6"    

echo "Build number: ${env.BUILD_NUMBER}"
//echo "Job Nameis: ${env.JOB_NAME}"
echo "Node Name is: ${env.NODE_NAME}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5'))])

try{
sendslacknotifications("STARTED")
stage('CheckoutCode'){
git branch: 'development', credentialsId: '7e698ad6-96e8-45dc-a1f4-8c7bab524140', url: 'https://github.com/sudhadevopssep/maven-web-application.git'
}

stage('Build'){
sh "${mavenHome}/bin/mvn clean package"    
}
/*
stage('Execute SonarQube Report'){
sh "${mavenHome}/bin/mvn sonar:sonar"    
}

stage('UploadArtifactsintoNexus'){
sh "${mavenHome}/bin/mvn deploy"    
}

stage('Deploy AppintoTomcatServer'){
sshagent(['7ec79a93-4e5f-4565-a4dc-f965a5496d1b']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.0.124:/opt/apache-tomcat-9.0.98/webapps/"
}
}
*/
}//tryblock closing
catch(e){
currentBuild.result = "FAILURE"
}//catchblock closing
finally {
    // Success or failure, always 
sendslacknotifications(currentBuild.result)
}//finnally closing

}//nodeclosing

def sendslacknotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#social")
}
